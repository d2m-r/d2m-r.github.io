```{=html}
<!-- 

Find and replace:

- 3 : week number (numeral only)
- 2 : class number (per week, numeral only)
- Friday, January 24, 2025 : date in format Monday, January 1, 2025
- Welcome to the Tidyverse : brief title/topic of the class meeting

TODO: see if there's a way to make these variables
The problem is that if they are includes with multiple on the index page, the variables would need to process before being included. 

-->
```

```{=html}
<!--
#### Announcements/Housekeeping/Etc

Text to appear before the accordion

-->
```

::::::::::::::::::::::::::: {#w3c2 .accordion}
:::: accordion-item
::: {.accordion-header .titlebox}
Week 3 | Class 2
:::
::::

:::: accordion-item
::: datebox
Friday, January 24, 2025
:::
::::

::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .prepbox type="button" data-bs-toggle="collapse" data-bs-target="#prep-w3c2" aria-expanded="false" aria-controls="prep-w3c2"}
**Before class:** Tidyverse resources
:::
::::

:::: {#prep-w3c2 .accordion-collapse .collapse data-bs-parent="#w3c2"}
::: accordion-body

**Feeling lost with the basics?** The open-access book [Introduction to R](https://intro2r.com/) has a fantastic “getting started” overview. Review the [Preface](https://intro2r.com/index.html) and [Chapter 1](https://intro2r.com/chap1.html) for the “how do I literally do anything?!” stuff and [Chapter 2](https://intro2r.com/basics_r.html) for the “I’m doing things but I have no idea what the things I’m doing are” stuff.

**Readings & resources**

-   Tidyverse guides & cheatsheets
    -   [readr](https://rstudio.github.io/cheatsheets/html/data-import.html)\* (direct [pdf](https://rstudio.github.io/cheatsheets/data-import.pdf) download)
    -   [tibble](https://tibble.tidyverse.org/)
    -   [dplyr](https://rstudio.github.io/cheatsheets/html/data-transformation.html)\* (direct [pdf](https://rstudio.github.io/cheatsheets/data-transformation.pdf) download)
    -   look ahead to cheatsheets for more tv packages [here](https://posit.co/resources/cheatsheets/) (Wk4)
-   r4ds intro chapters (recommend you read in this order - 7, 3, 5):
    -   [7 - Data import](https://r4ds.hadley.nz/data-import)\*
    -   [3 – Data transformation](https://r4ds.hadley.nz/data-transform)\*
    -   [5 - Data tidying](https://r4ds.hadley.nz/data-tidy) : skim this for now, read it thoroughly before W4C1
-   For R converts coming from other data analyses:
    -   [Stata to R :: cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/master/stata2r.pdf)
    -   [R for Stata Users](https://content.e-bookshelf.de/media/reading/L-6263-42442f4dac.pdf) (Muenchen & Hilbe)
    -   [R for SAS & SPSS Users](https://r4stats.com/books/free-version/) (Muenchen)
    -   [From SPSS to R](https://www.melissagwolf.com/spss-to-r/) (Wolf)
    -   [Switching from Matlab to R](https://www.clarkrichards.org/2014/01/19/switching-from-matlab-to-r-part-1/) (Richards)
    -   [R for MATLAB users](https://mathesaurus.sourceforge.net/octave-r.html) (cheatsheet-ish)
    
:::
::::
:::::::

::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .classbox type="button" data-bs-toggle="collapse" data-bs-target="#class-w3c2" aria-expanded="false" aria-controls="class-w3c2"}
**Class meeting:** Tidy Data & Core Tidyverse Packages (Part 1)
:::
::::

:::: {#class-w3c2 .accordion-collapse .collapse data-bs-parent="#w3c2"}
::: accordion-body
**Materials:**

-   [Slides](https://uchicago.box.com/s/x30wq9gwdyizeorsaftd6ukn36bm9mss) *(v1 1/23/25 9:40am)*
-   [dplyr pipeline demo](https://github.com/nrdowling/d2mr-assessment/blob/main/00_in-class-materials/demo-snippets.R): `00_in-class-materials/demo-snippets.R`

**Class plans:**

-   Lecture: Welcome to the Tidyverse Part 1: readr, tibble, dplyr
-   In-class exercise: reading and writing practice
-   Demo (time permitting): dplyr pipelines

:::
::::
:::::::

::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .infobox type="button" data-bs-toggle="collapse" data-bs-target="#info-w3c2" aria-expanded="false" aria-controls="info-w3c2"}
**Info: Mini-project reminders/clarifications**
:::
::::

:::: {#info-w3c2 .accordion-collapse .collapse data-bs-parent="#w3c2"}
::: accordion-body
**Reminders:** 

::: {.alert .alert-danger role="alert"}

**Get your forked `d2mr-assessment` repo set up and functional!!** Top priority!! Attend TA office hours if you're still having trouble.

:::

**Additional information:**

-   Mini-projects should be fully distinct from your final project
    -   If you want to use the same data in a very different way ask for an exception via the mini-project proposal process
    -   Even for exceptions, your MP should not be contained within your final project repo
-   In most cases, demonstrating the GitHub skills via a mini-project will require creating a new repo for the purposes of the project
-   MPs should have a "home" in your assessment repo that contains (minimally) the assessment file
-   Expect your MP grades to be lower earlier on, as the quarter goes on you'll be able to show more and more skills within a single project
-   Final project repo names – make them informative!! This is part of git best practices.
    -   "early-childhood-shrugs" *not* "final-project-d2mr"
:::
::::
:::::::

::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .todobox type="button" data-bs-toggle="collapse" data-bs-target="#post-3c1" aria-expanded="false" aria-controls="after-w3c2"}
**After class:** Practice with `readr` and `dplyr`
:::
::::

:::: {#post-3c1 .accordion-collapse .collapse data-bs-parent="#w3c2"}
::: accordion-body
**To-do:** Download and store the tidyverse cheatsheets

**Recommended exercises:** View slides and mini-project repo files for additional details for each exercise.

-   **Read/write practice:**
    -   In a new notebook, use `readr` and related functions to read in a tabular dataset (.csv/.tsv), transform the data in some way, then write to a new .csv file. Replicate the process in an .R script, then source that script in the notebook.
    -   Find or create a variety of datasets to repeat the process, like different file types (e.g., .csv, google sheets, .xlsx, .sav), different "extras" (e.g, multiple tabs, rich formatting, non-data text, header rows), and different combinations of file locations (e.g., notebook and script in same folder folder, one in root folder and one in a subdirectory, writing/reading files in a lower- or higher-level subdirectory).
    -   Pay attention to which packages are necessary to run which functions, which functions include which arguments (and the default argument values, and which differences in relative paths depending on function and file locations.
-   **Data cleaning structured exercises:**
    -   Walkthrough: Clean the iris Dataset
        -   Demo only! Walks you step by step through a cleaning process, setting you up to complete the Level 1 or 2 mini-projects.
        -   Associated mini-project: `01_data-cleaning/00_cleaning-walkthrough`
    -   Level 1: Clean the mtcars Dataset
        -   Work with a simple dataset, focusing on basic data cleaning tasks. Most tasks are outlined in the assignment script.
        -   Associated mini-project: `01_data-cleaning/01_cleaning-level-1`
    -   Level 2: Clean the midwest Dataset
        -   Work with a more complex dataset and perform more involved cleaning tasks. General guidance is given without much structured support.
        -   Associated mini-project: `01_data-cleaning/02_cleaning-level-2`
-   **Group “uncleaning”:**
    -   Work together with a classmate to each “unclean” a dataset for the other(s) to clean. Can be done in partners or small groups.
    -   Associated mini-project: `01_data-cleaning/03_group-unclean`
    
:::
::::
:::::::
:::::::::::::::::::::::::::
