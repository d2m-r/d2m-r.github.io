
<!-- 

Find and replace:

- 2 : week number (numeral only)
- 1 : class number (per week, numeral only)
- Monday, January 13, 2025 : date in format Monday, January 1, 2025
- GitHub & R Essentials : brief title/topic of the class meeting

TODO: see if there's a way to make these variables
The problem is that if they are includes with multiple on the index page, the variables would need to process before being included. 

-->

<!--
#### Announcements/Housekeeping/Etc

Text to appear before the accordion

-->

:::::::::::::::::::::::::::::: {#w2c1 .accordion}

:::: accordion-item
::: {.accordion-header .titlebox}
Week 2 | Class 1
:::
::::

:::: accordion-item
::: {.datebox}
Monday, January 13, 2025
:::
::::

::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .prepbox type="button" data-bs-toggle="collapse" data-bs-target="#prep-w2c1" aria-expanded="false" aria-controls="prep-w2c1"}
**Before class:** Required & supplemental readings on R and GitHub
:::
::::

:::: {#prep-w2c1 .accordion-collapse .collapse data-bs-parent="#w2c1"}
::: accordion-body

**Readings & Resources:** 

-   R/RStudio
    -   An Introduction to R, Douglas et al. (2024)
        - [Chapter 2: Some R Basics](https://intro2r.com/basics_r.html)\*
        - [Chapter 3: Data in R](https://intro2r.com/data_r.html)\*
        - [Chapter 7: Programming in R](https://intro2r.com/prog_r.html)
-   GitHub
    -   An Introduction to R, Douglas et al. (2024)
        - [Chapter 8: Version Control with Git and GitHub](https://intro2r.com/github_r.html)\*
    -   R for the Rest of Us: [How to Use Git/GitHub with R](https://rfortherestofus.com/2021/02/how-to-use-git-github-with-r)
    -   Bryan J. 2017. [Excuse me, do you have a moment to talk about version control?](https://doi.org/10.7287/peerj.preprints.3159v2) PeerJ Preprints
    -   [.gitignore Documentation](https://git-scm.com/docs/gitignore)

_\*Required reading_

:::
::::
:::::::

::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .classbox type="button" data-bs-toggle="collapse" data-bs-target="#class-w2c1" aria-expanded="false" aria-controls="class-w2c1"}
**Class meeting: GitHub & R Essentials**
:::
::::

:::: {#class-w2c1 .accordion-collapse .collapse data-bs-parent="#w2c1"}
::: accordion-body

**Materials:**

-   [Slides](https://uchicago.box.com/s/98m8utke26vz83rbpa30tmwxmz0f5ltx) *(v2 1/13/25 4:30pm)*
-   [Programmer's groceries demo](https://github.com/nrdowling/d2mr-assessment/tree/main/in-class-materials) *(this is in the d2mr-assessment repo, so make sure you can pull from upstream!)*

**Class plans:**

-   Lecture: GitHub & R Essentials
    -   Note: This is a long, dense lecture that we probably won't make it all the way through, so be sure to review the slides and read the required readings before class!
-   Activities:
    -   Probably none
    -   If by some chance we get through the whole lecture with time to spare we'll work on some simple programming exercises

:::
::::
:::::::


::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .infobox type="button" data-bs-toggle="collapse" data-bs-target="#info-w2c1" aria-expanded="false" aria-controls="info-w2c1"}
**Info:** Office hours, copilot, assessment repo, exercises
:::
::::

:::: {#info-w2c1 .accordion-collapse .collapse data-bs-parent="#w2c1"}
::: accordion-body
**Announcements:**

-   **Office hours:** For the time being I need to limit my office hours to a maximum of 2 appointments per quarter. I am hopeful that at some point in February I will be able to add more hours each week so that I don't have to have a per-quarter cap. I'll keep you posted if that's the case!

**Reminders:**

-   **Copilot:** Using copilot in RStudio (or any AI/LLM) is fully optional for this course.
    -   I do recommend setting it up and trying it out, but you are not required to do so, and it's not worth driving yourself up a wall for. You do not need Copilot for any material on the syllabus, and it does not have to be part of your troubleshooting/debugging workflow. The integrated Copilot in RStudio isn't designed for debugging anyway, since it's essentially a fancy autocomplete and not something you can prompt with questions.
    -   The one thing I'll add here is a link to [RStudio's documentation for using Copilot](https://docs.posit.co/ide/user/ide/guide/tools/copilot.html). If you're just getting started that's the place to go first. (Also, if you started there but have since hit issues and tried a bunch of other things, it never hurts to just download a fresh copy of RStudio and start from scratch! The "have you tried turning it off and on again" approach solves more problems that you might expect.)
    -   Please continue to ask for help setting it up on Slack, but know that we will not cover this in class.
-   **Assessment repo:** Be sure to pull from the assessments repo frequently. This is where I will add/update both mini-project guidelines and materials for in-class demos.
-   **Exercises:** The slides for most lectures include at least 1 suggested exercise related to the lecture's topic. These vary in scope and complexity. They are not required and there is nothing to submit.
    -   All exercises include a box on the slide listing the numbers of the assessed and unassessed learning objectives I intend for the exercise to *primarily* address. This is just for your reference, so you can decide what to prioritize and you can get a sense of what kind of things demonstrate each objective. You can see which numbers go with which objectives either by rendering the `assessment.md` file or by referring to the [website](https://nrdowling.com/d2mr/assessment/objectives.html).
    -   Some exercises additionally reference an associated mini-project, which are usually additional guidelines to complete a moderately more complex version of the exercise. For exercises that do not have an associated mini-project, you are welcome to expland the exercise into a full mini-project. Follow the "off-the-menu" instructions to do so.

:::
::::
:::::::

::::::: accordion-item
:::: accordion-header
::: {.accordion-button .collapsed .todobox type="button" data-bs-toggle="collapse" data-bs-target="#post-2c1" aria-expanded="false" aria-controls="after-w2c1"}
**After class:** Programmer's groceries & recommended exercises
:::
::::

:::: {#post-2c1 .accordion-collapse .collapse data-bs-parent="#w2c1"}
::: accordion-body

**To-do:** 

-   [Programmer's groceries demo](https://github.com/nrdowling/d2mr-assessment/tree/main/in-class-materials)
    -   The `groceries.qmd` notebook walks through examples of writing conditionals and defining functions based on a very old and cliche joke. The notebook includes both extensive markdown explanation and code in chunks you can run individually. 
    -   Start by working through the notebook and executing the code, then experiment a little with the code to see if you can make things more efficient or introduce new scenarios.
-   Next class on R Markdown & Quarto will be another dense lecture, so be sure to review the slides and read the required readings and preview the slides before class. Slides will be posted by Wednesday.

**Recommended exercises:** View slides for additional details for each exercise.

-  **GitHub required files:** 
    -   Revisit the README.md and .gitignore files you created in the W1C2 exercises. With your new knowledge of the whats and whys of GitHub and these files, revise the README to make it more informative and revise the .gitignore to include any files or folders that fall into the categories we discussed in class. 
-  **Simple .R script:** 
    -   Write a simple .R script that (minimally) loads the `tidyverse` packages, requires a package, includes commented text, and assigns at least one numberic and one string variable. To go further, use vectors to create a data frame or tibble and/or `source()` your R script into a code chunk in an R Markdown document. 
-  **hello_world() function:** 
    -   Define a `hello_world()` function in an .R script that includes object assignment, conditional logic, and (ideally) a `for` or `while` loop. The function should take at least one argument and return at least two possible values. 
    -   Associated mini-project: `06_r-programming/01_hello-world`
-   **Skeleton repo:** 
    -   Create a GitHub repo connected to an R project for either a planned or fictional research project. In the R Project, create a "skeleton" that includes all the files and folders you anticipate needing for the project. Structure your repo to *exclude* all files and directories that should (for whatever reason) be excluded. As you work, use git best practices for version control, including frequent informative commit messages and functional, up-to-date README and .gitignore files.
    -   Associated mini-project: `07_git-github/01_skeleton-repo`


:::
::::
:::::::
::::::::::::::::::::::::::::::
